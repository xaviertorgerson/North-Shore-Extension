Main function ideas:

the function will have two phases for operation, a run phase and an update phase
all data that needs to be sent to another module during the run phase will be saved in the main function for the update phase
During the update pahse the main's buffer will unload all the data into the individual modules, the modules will update their internal
values using this data
During run phase, the modules will work of of the update and change their states

Track controller skeleton:

Input:
	CTC:
	Route information, as a set of switch instrucitons, can be in the form of an array of 2 variable vectors (block# (int), status 		(boolean))	
		ex: switch on block 6 down, switch on block 9 up
		ex: (6,0(F)), (9,1(T))
	Authority and Speed limit: as two doubles and in miles and miles per hour
	
	Track Model:
	Current Track Status: as an array of blocks, 
		each block will be an array containing all status for the track which includes
		number (int), occupancy (boolean), type (switch, cross, etc.)(int, char or string), type status (will be 0 if it is a regular 			track or a station can be either 0 or 1 for every other track) (boolean), and heater status (boolean)
		Each block array will start 2 tracks before a switch and two after a switch
		Block arrays can be shared between track controllerse 

Output:
	To CTC:
	Track status: as an array of blocks, exactly the same as the array of blocks recieved from the track model
	Failure: as a boolean (T for failed, F for working)
	
	Track Model:
	New Track status: track status will be the state that track should be in, not that the track should switch state
		Will have both the number of the track that needs updating and the state for that track
		Will only send a state to a track block if the track block needs to change state

Main functions:
	update(new information,sending module):
		update the track controllers internal information
	updateUI(new information):
		update the track controller's UI with the new informaiton
	sendData(new information,module to send to):
		send data from this module to another module.
